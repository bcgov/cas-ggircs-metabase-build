apiVersion: template.openshift.io/v1
kind: Template

parameters:
- description: Prefix to prepend to object name.
  displayName: Prefix
  name: PREFIX
  required: true

objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: ${PREFIX}metabase-postgres
  spec:
    replicas: 1
    selector:
      name: ${PREFIX}metabase-postgres
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${PREFIX}metabase-postgres
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: ${PREFIX}metabase-postgres
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: ${PREFIX}metabase-postgres
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: ${PREFIX}metabase-postgres
          - name: POSTGRESQL_MAX_CONNECTIONS
            value: '1000'
          - name: POSTGRESQL_MAX_PREPARED_TRANSACTIONS
            value: '1000'
          - name: POSTGRESQL_SHARED_BUFFERS
            value: 2GB
          - name: POSTGRESQL_EFFECTIVE_CACHE_SIZE
            value: 8GB
          image: ${PREFIX}postgres-mirror:${POSTGRES_VERSION}
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: ${PREFIX}metabase-postgres
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: 2Gi
              cpu: 1000m
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: ${PREFIX}metabase-postgres
          - mountPath: /opt/app-root/src/data
            name: ${PREFIX}data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: ${PREFIX}metabase-postgres
          persistentVolumeClaim:
            claimName: ${PREFIX}metabase-postgres
        - name: ${PREFIX}data
          persistentVolumeClaim:
            claimName: ${PREFIX}data
