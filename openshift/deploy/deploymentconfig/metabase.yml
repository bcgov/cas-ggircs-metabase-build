apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: deploy-template

parameters:
  - description: Prefix to prepend to object name.
    displayName: Prefix
    name: PREFIX
    required: true
  - description: SHA1 of git revision to be deployed.
    displayName: Git SHA1
    name: GIT_SHA1
    required: true
  - description: Openshift project name
    displayName: Project
    name: OC_PROJECT
    required: true
  - description: Openshift registry URL
    displayName: Registry
    name: OC_REGISTRY
    required: true

objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: "true"
      name: ${PREFIX}metabase
    spec:
      replicas: 2
      selector:
        name: ${PREFIX}metabase
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            name: ${PREFIX}metabase
        spec:
          containers:
            - env:
                - name: MB_DB_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: ${PREFIX}metabase-postgres
                - name: MB_DB_PASS
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: ${PREFIX}metabase-postgres
                - name: MB_DB_DBNAME
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: ${PREFIX}metabase-postgres
                - name: MB_DB_TYPE
                  value: postgres
                - name: MB_DB_PORT
                  value: "5432"
                - name: MB_DB_HOST
                  value: cas-postgres-master
                - name: JAVA_TIMEZONE
                  value: US/Pacific
              image: ${OC_REGISTRY}/${OC_PROJECT}/${PREFIX}metabase:${GIT_SHA1}
              imagePullPolicy: IfNotPresent
              name: ${PREFIX}metabase
              ports:
                - containerPort: 3000
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /api/health
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 10
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /api/health
                  port: 3000
                  scheme: HTTP
                initialDelaySeconds: 300
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: "1"
                  memory: 4Gi
                requests:
                  cpu: 100m
                  memory: 2Gi
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
